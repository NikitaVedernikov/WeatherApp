// Generated by view binder compiler. Do not edit!
package com.example.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView1;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final CardView cardView3;

  @NonNull
  public final CardView cardView4;

  @NonNull
  public final CardView cardView5;

  @NonNull
  public final TextView cityView1;

  @NonNull
  public final TextView cityView2;

  @NonNull
  public final TextView cityView3;

  @NonNull
  public final TextView cityView4;

  @NonNull
  public final TextView cityView5;

  @NonNull
  public final LinearLayout linearLayout1;

  @NonNull
  public final TextView textView7;

  private ActivityListBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView1,
      @NonNull CardView cardView2, @NonNull CardView cardView3, @NonNull CardView cardView4,
      @NonNull CardView cardView5, @NonNull TextView cityView1, @NonNull TextView cityView2,
      @NonNull TextView cityView3, @NonNull TextView cityView4, @NonNull TextView cityView5,
      @NonNull LinearLayout linearLayout1, @NonNull TextView textView7) {
    this.rootView = rootView;
    this.cardView1 = cardView1;
    this.cardView2 = cardView2;
    this.cardView3 = cardView3;
    this.cardView4 = cardView4;
    this.cardView5 = cardView5;
    this.cityView1 = cityView1;
    this.cityView2 = cityView2;
    this.cityView3 = cityView3;
    this.cityView4 = cityView4;
    this.cityView5 = cityView5;
    this.linearLayout1 = linearLayout1;
    this.textView7 = textView7;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView1;
      CardView cardView1 = ViewBindings.findChildViewById(rootView, id);
      if (cardView1 == null) {
        break missingId;
      }

      id = R.id.cardView2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.cardView3;
      CardView cardView3 = ViewBindings.findChildViewById(rootView, id);
      if (cardView3 == null) {
        break missingId;
      }

      id = R.id.cardView4;
      CardView cardView4 = ViewBindings.findChildViewById(rootView, id);
      if (cardView4 == null) {
        break missingId;
      }

      id = R.id.cardView5;
      CardView cardView5 = ViewBindings.findChildViewById(rootView, id);
      if (cardView5 == null) {
        break missingId;
      }

      id = R.id.cityView1;
      TextView cityView1 = ViewBindings.findChildViewById(rootView, id);
      if (cityView1 == null) {
        break missingId;
      }

      id = R.id.cityView2;
      TextView cityView2 = ViewBindings.findChildViewById(rootView, id);
      if (cityView2 == null) {
        break missingId;
      }

      id = R.id.cityView3;
      TextView cityView3 = ViewBindings.findChildViewById(rootView, id);
      if (cityView3 == null) {
        break missingId;
      }

      id = R.id.cityView4;
      TextView cityView4 = ViewBindings.findChildViewById(rootView, id);
      if (cityView4 == null) {
        break missingId;
      }

      id = R.id.cityView5;
      TextView cityView5 = ViewBindings.findChildViewById(rootView, id);
      if (cityView5 == null) {
        break missingId;
      }

      id = R.id.linearLayout1;
      LinearLayout linearLayout1 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout1 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      return new ActivityListBinding((ConstraintLayout) rootView, cardView1, cardView2, cardView3,
          cardView4, cardView5, cityView1, cityView2, cityView3, cityView4, cityView5,
          linearLayout1, textView7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
